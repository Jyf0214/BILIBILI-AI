name: bilibili-daily-task

on:
  workflow_dispatch: # 手动触发
  schedule: # 计划任务触发
    - cron: '0 16 * * *'

jobs:
  run-bilibili-tool:
    runs-on: ubuntu-latest
    environment: Production

    steps:
    # 检测启动时的公网 IP
    - name: Detect Initial Public IP
      run: |
        echo "检测启动时的公网 IP..."
        curl -s ifconfig.me || wget -qO- ifconfig.me
        echo ""

    # 设置服务器时区为东八区 
    - name: Set time zone
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    # 检出代码
    - name: Checkout
      uses: actions/checkout@v2

    # .Net 环境
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # 设置代理环境变量
    - name: Configure Proxy
      env:
        PROXY_HOST: ${{ secrets.PROXY_HOST }}    # 代理服务器地址
        PROXY_PORT: ${{ secrets.PROXY_PORT }}    # 代理服务器端口
        PROXY_USER: ${{ secrets.PROXY_USER }}    # 代理用户名
        PROXY_PASS: ${{ secrets.PROXY_PASS }}    # 代理密码
      run: |
        echo "设置代理..."
        export http_proxy="http://${PROXY_USER}:${PROXY_PASS}@${PROXY_HOST}:${PROXY_PORT}"
        export https_proxy="http://${PROXY_USER}:${PROXY_PASS}@${PROXY_HOST}:${PROXY_PORT}"
        echo "代理配置完成。"

    # 检测设置代理后的公网 IP
    - name: Detect Proxy Public IP
      run: |
        echo "检测代理后的公网 IP..."
        curl -s ifconfig.me || wget -qO- ifconfig.me
        echo ""

    # 发布
    - name: Publish
      run: |
        cd ./src/Ray.BiliBiliTool.Console
        dotnet publish --configuration Release --self-contained false --output ./bin/Publish/net5-dependent

    # 运行
    - name: Run APP
      env:
        ASPNETCORE_ENVIRONMENT: ${{ secrets.ENV }} # 运行环境
        Ray_BiliBiliCookie__CookieStr: ${{ secrets.COOKIESTR }}
        Ray_BiliBiliCookie__DedeUserID: ${{ secrets.DEDEUSERID }}
        Ray_BiliBiliCookie__SessData: ${{ secrets.SESSDATA }}
        Ray_BiliBiliCookie__BiliJct: ${{ secrets.BILIJCT }}
        Ray_Security__IsSkipDailyTask: ${{ secrets.ISSKIPDAILYTASK }}
        Ray_Security__IntervalSecondsBetweenRequestApi: ${{ secrets.INTERVALSECONDSBETWEENREQUESTAPI }}
        Ray_Security__UserAgent: ${{ secrets.USERAGENT }}
        Ray_Serilog__WriteTo__3__Args__botToken: ${{ secrets.PUSHTGTOKEN }}
        Ray_Serilog__WriteTo__3__Args__chatId: ${{ secrets.PUSHTGCHATID }}
      run: |
        cd ./src/Ray.BiliBiliTool.Console/bin/Publish/net5-dependent
        dotnet Ray.BiliBiliTool.Console.dll -closeConsoleWhenEnd=1 ${{ secrets.OTHERCONFIGS }}